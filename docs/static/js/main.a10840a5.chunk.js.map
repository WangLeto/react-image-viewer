{"version":3,"sources":["logo.svg","ImageView.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","orientation_left","orientation_right","scaleModes","OriginalSize","LongSideFit","ShortSideFit","currentScaleMode","Actions","Free","Move","MoveRatio","freeScaleMinRatioForLongSide","ImageView","state","showView","currentIndex","_this","props","scaleRatio","showTopBar","translateX","translateY","enableTransformAnimation","startTouch","e","timers","firstClickTimer","recordTimer","clearTimeout","toggleTopBar","touching","touches","length","touch","recordPreTouchPosition","clientX","clientY","one","two","preTouchesClientx1y1x2y2","stopTouch","doubleClickTimer","removedTouch","changedTouches","doubleClickScale","target","lastAction","inertiaDamp","extraMove","scaleDamp","touchMove","freeScale","justFreeScaled","rect","imgBounding","posX","left","rectLeft2TransXFix","posY","top","rectTop2TransYFix","maskSize","forbidTranslateY","height","transX","pageX","preTouchPosition","x","transY","pageY","y","setState","transition","recordTranslate","lastTwoMove","this","shift","push","lastTwo","_this$maskSize","mWidth","width","mHeight","_this$imgBounding$rec","right","bottom","dimen","imagesSizes","newScaleRatio","scaleRatioCheck","extraX","extraY","shouldDamp","wannaShift","shiftOrientation","tryShiftImg","t","Math","log10","sqrt","animation","concat","toFixed","_this$maskSize2","_this$imgBounding$rec2","longSide","allNum","getRect2TranslateFix","loadImageBound","distance","x1","y1","x2","y2","a","b","_this2","oldRatio","_this$imgBounding$rec3","_e$touches$","oneClientX","oneClientY","_e$touches$2","twoClientX","twoClientY","newRatio","apply","Object","toConsumableArray","newOrigin","relativeCoordinate","console","log","scaleMode","originWidth","getScaleRatio","setTimeout","transStyle","idx","assign","transform","willChange","timerKey","timeout","callback","_this$maskSize3","maskHeight","maskWidth","cancelTouch","keys","map","key","getMaskSize","document","body","clientWidth","clientHeight","img","getBoundingClientRect","index","querySelectorAll","ratio","updateOnResize","tick","update","_this3","forEach","size","bind","assertThisInitialized","onImagesLoad","_ref","naturalWidth","originHeight","naturalHeight","disableBodyMove","preventDefault","componentWillMount","window","addEventListener","passiveSupport","option","defineProperty","get","err","passive","componentDidMount","componentWillUnmount","onUnmount","removeEventListener","download","_callee","filename","regenerator_default","wrap","_context","prev","next","alert","stop","_this4","react_default","createElement","className","Topbar","close","isShow","indexInfo","images","onTouchEnd","onTouchMove","onTouchStart","onTouchCancel","src","draggable","alt","style","onLoad","onContextMenu","Component","onClick","ShowImageView","arguments","undefined","container","querySelector","appendChild","Array","isArray","Error","component","React","ReactDOM","render","unmountComponentAtNode","onClose","Function","App","showImageView","reverse","logo","Boolean","location","hostname","match","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a10840a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/ImageView.scss';\r\n\r\n// 切换图片的方向\r\nconst orientation_left = -1, orientation_right = 1;\r\n\r\n// 双击缩放----\r\n// 默认缩放模式：⑴ 原始尺寸、⑵ 最长边充满、⑶ 最短边充满\r\nconst scaleModes = {\r\n  OriginalSize: 0,\r\n  LongSideFit: 1,\r\n  ShortSideFit: 2,\r\n  // Current Mode, always init as LongSideFit\r\n  currentScaleMode: 1\r\n};\r\nconst Actions = {\r\n  OriginalSize: 0,\r\n  LongSideFit: 1,\r\n  ShortSideFit: 2,\r\n  Free: 3,\r\n  Move: 4\r\n};\r\n// 惯性移动倍数\r\nconst MoveRatio = 15;\r\n\r\n// 自由缩放时，较长边最终的显示尺寸不小于屏幕的比例\r\nconst freeScaleMinRatioForLongSide = 0.5;\r\nclass ImageView extends Component {\r\n  state = {\r\n    showView: false,\r\n    // 当前展示的图片序数\r\n    currentIndex: this.props.currentIndex,\r\n    // 当前图片缩放倍率\r\n    scaleRatio: 1,\r\n    // 显示顶栏\r\n    showTopBar: true,\r\n    // 平移量\r\n    translateX: 0,\r\n    translateY: 0,\r\n    // 先在双击时启用吧\r\n    enableTransformAnimation: false,\r\n  }\r\n\r\n  // 判断：如果短时间内离开，且无移动动作，则为工具栏切换\r\n  startTouch = (e) => {\r\n    if (this.timers.firstClickTimer) {\r\n      this.recordTimer('doubleClickTimer', 300);\r\n      this.clearTimeout('firstClickTimer');\r\n    } else {\r\n      this.recordTimer('firstClickTimer', 300, this.toggleTopBar);\r\n    }\r\n    this.touching = true;\r\n    let touches = e.touches;\r\n    // 记录起始点\r\n    if (touches.length === 1) {\r\n      let touch = touches[0];\r\n      this.recordPreTouchPosition(touch.clientX, touch.clientY);\r\n    } else {\r\n      // 多指手势，以前两点为准\r\n      let one = touches['0'];\r\n      let two = touches['1'];\r\n      this.preTouchesClientx1y1x2y2 = [one.clientX, one.clientY, two.clientX, two.clientY];\r\n    }\r\n  }\r\n\r\n  stopTouch = (e) => {\r\n    // 还有一个 touch，解除缩放模式，进入移动\r\n    if (e.touches.length === 1) {\r\n      let touch = e.touches[0];\r\n      this.recordPreTouchPosition(touch.clientX, touch.clientY);\r\n    } else if (e.touches.length === 0) {\r\n      this.touching = false;\r\n      this.preTouchesClientx1y1x2y2 = [];\r\n      // console.log(`before touch stop: %c${Object.keys(Actions).find(key => Actions[key] === this.state.lastAction)}`,\r\n      //   'color:green; font-weight:bold');\r\n      if (this.timers.doubleClickTimer) {\r\n        // todo 暂时移除了双击缩放\r\n        let removedTouch = e.changedTouches[0];\r\n        this.doubleClickScale(removedTouch.target, removedTouch.clientX, removedTouch.clientY);\r\n        return;\r\n      }\r\n      if (!this.timers.firstClickTimer && !this.timers.doubleClickTimer) {\r\n        if (this.state.lastAction === Actions.Move) {\r\n          this.inertiaDamp.extraMove();\r\n        } else if (this.state.lastAction === Actions.Free) {\r\n          this.inertiaDamp.scaleDamp();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  touchMove = (e) => {\r\n    let touches = e.touches;\r\n    // 取消单击和双击双击计时\r\n    this.clearTimeout('firstClickTimer');\r\n    this.clearTimeout('doubleClickTimer');\r\n    if (touches.length > 1) {\r\n      this.freeScale(e);\r\n    } else {\r\n      // moving ------------------------------------- (　 ´-ω ･)▄︻┻┳══━一\r\n      // 防止 free scale 抬手时触发 move\r\n      if (this.timers.justFreeScaled) {\r\n        return;\r\n      }\r\n      let touch = touches[0];\r\n      let rect = this.imgBounding.rect;\r\n      let posX = rect.left + this.rectLeft2TransXFix;\r\n      let posY = rect.top + this.rectTop2TransYFix;\r\n      // 仅在高度大于 Y轴高度 的情况下支持 Y 轴移动\r\n      let maskSize = this.maskSize;\r\n      let forbidTranslateY = false;\r\n      if (rect.height <= maskSize.height) {\r\n        forbidTranslateY = true;\r\n      }\r\n      let transX = touch.pageX - this.preTouchPosition.x + posX;\r\n      let transY = forbidTranslateY ? this.state.translateY : touch.pageY - this.preTouchPosition.y + posY;\r\n\r\n      this.setState({\r\n        translateX: transX,\r\n        translateY: transY,\r\n        transition: '',\r\n        enableTransformAnimation: false,\r\n        lastAction: Actions.Move\r\n      });\r\n      this.recordPreTouchPosition(touch.clientX, touch.clientY);\r\n      this.inertiaDamp.recordTranslate(touch.pageX, touch.pageY);\r\n    }\r\n  }\r\n\r\n  // 记录 move 最后 2 个位移数据，从而实现惯性效果\r\n  // [{translateX: n, translateY: n}, {..}]\r\n  inertiaDamp = {\r\n    // 写 2 个 null 的话有时会出错，why？\r\n    lastTwoMove: [{ x: 0, y: 0 }, { x: 0, y: 0 }],\r\n    recordTranslate: function (x, y) {\r\n      this.lastTwoMove.shift();\r\n      this.lastTwoMove.push({ x: x, y: y });\r\n    },\r\n    // 进入此处时不可能处于缓动过程中\r\n    extraMove: () => {\r\n      let state = this.state;\r\n      if (state.lastAction !== Actions.Move) {\r\n        return;\r\n      }\r\n\r\n      let lastTwo = this.inertiaDamp.lastTwoMove;\r\n      let { width: mWidth, height: mHeight } = this.maskSize;\r\n      let { top, right, bottom, left, height, width } = this.imgBounding.rect;\r\n      let dimen = this.imagesSizes[state.currentIndex];\r\n      let newScaleRatio = this.inertiaDamp.scaleRatioCheck();\r\n      if (newScaleRatio !== state.scaleRatio) {\r\n        width = dimen.width * newScaleRatio;\r\n        height = dimen.height * newScaleRatio;\r\n        left = mWidth / 2 - width / 2;\r\n        right = mWidth / 2 + width / 2;\r\n        top = mHeight / 2 - height / 2;\r\n        bottom = mHeight / 2 + height / 2;\r\n      }\r\n\r\n      let extraX = (lastTwo[1].x - lastTwo[0].x) * MoveRatio;\r\n      let extraY = height > mHeight ? (lastTwo[1].y - lastTwo[0].y) * MoveRatio : 0;\r\n      let transX = extraX + state.translateX;\r\n      let transY = extraY + state.translateY;\r\n      let shouldDamp = false;\r\n\r\n      if (height >= mHeight) {\r\n        if (top > 0 || top + extraY > 0) {\r\n          shouldDamp = true;\r\n          transY = this.rectTop2TransYFix;\r\n        }\r\n        if (bottom < mHeight || bottom + extraY < mHeight) {\r\n          shouldDamp = true;\r\n          transY = state.translateY + mHeight - bottom;\r\n        }\r\n      } else {\r\n        // 不触发回弹动画\r\n        transY = (1 - newScaleRatio) * (dimen.height / 2);\r\n      }\r\n      // fixme review needed\r\n      if (width < mWidth) {\r\n        shouldDamp = true;\r\n        transX = (1 - newScaleRatio) * (dimen.width / 2);\r\n      } else {\r\n        if (left + extraX > 0) {\r\n          shouldDamp = true;\r\n          transX = state.translateX - left;\r\n        } else if (right + extraX < mWidth) {\r\n          shouldDamp = true;\r\n          transX = state.translateX + (mWidth - right);\r\n        }\r\n      }\r\n\r\n      // todo 切换前就展示下张图片\r\n\r\n      let wannaShift = false;\r\n      let shiftOrientation = null;\r\n      if (left > 0 && extraX > 0) {\r\n        wannaShift = true;\r\n        shiftOrientation = orientation_left;\r\n      } else if (right < mWidth && extraX < 0) {\r\n        wannaShift = true;\r\n        shiftOrientation = orientation_right;\r\n      }\r\n      if (wannaShift && this.tryShiftImg(shiftOrientation)) {\r\n        return;\r\n      }\r\n\r\n      let t = Math.log10(Math.sqrt(extraX * extraX + extraY * extraY) / 75);\r\n      let animation = `all ${(t <= 0.1 ? 0.1 : t >= 1 ? 1 : t).toFixed(3)}s cubic-bezier(0.18, 0.8, 0.24, 0.96)`;\r\n      if (extraX === 0 && extraY === 0 && !shouldDamp) {\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        scaleRatio: newScaleRatio,\r\n        translateX: transX,\r\n        translateY: transY,\r\n        transition: shouldDamp ? 'all 400ms cubic-bezier(0.175, 0.885, 0.32, 1.275)' : animation\r\n      });\r\n    },\r\n    // scale 后的正骨（误）复位效果\r\n    scaleDamp: () => {\r\n      let state = this.state;\r\n      let { width: mWidth, height: mHeight } = this.maskSize;\r\n      let { top, right, bottom, left, height, width } = this.imgBounding.rect;\r\n      let transX = state.translateX;\r\n      let transY = state.translateY;\r\n      let dimen = this.imagesSizes[state.currentIndex];\r\n      let shouldDamp = false;\r\n      let newScaleRatio = this.inertiaDamp.scaleRatioCheck();\r\n\r\n      if (height >= mHeight) {\r\n        if (top > 0) {\r\n          shouldDamp = true;\r\n          transY = this.rectTop2TransYFix;\r\n        }\r\n        if (bottom < mHeight) {\r\n          shouldDamp = true;\r\n          transY = state.translateY + mHeight - bottom;\r\n        }\r\n      } else {\r\n        shouldDamp = true;\r\n        transY = (1 - newScaleRatio) * (dimen.height / 2);\r\n      }\r\n      if (width < mWidth) {\r\n        shouldDamp = true;\r\n        transX = (1 - newScaleRatio) * (dimen.width / 2);\r\n      } else {\r\n        if (left > 0) {\r\n          shouldDamp = true;\r\n          transX = state.translateX - left;\r\n        } else if (right < mWidth) {\r\n          shouldDamp = true;\r\n          transX = state.translateX + (mWidth - right);\r\n        }\r\n      }\r\n\r\n      if (shouldDamp) {\r\n        this.setState({\r\n          scaleRatio: newScaleRatio,\r\n          translateX: transX,\r\n          translateY: transY,\r\n          transition: 'all 400ms cubic-bezier(0.175, 0.885, 0.32, 1.275)'\r\n        });\r\n      }\r\n    },\r\n    scaleRatioCheck: () => {\r\n      let dimen = this.imagesSizes[this.state.currentIndex];\r\n      let rect = this.imgBounding.rect;\r\n      let maskSize = this.maskSize;\r\n      // 图片过小的限制\r\n      let newScaleRatio = null;\r\n      if (rect.width < maskSize.width && rect.height < maskSize.height) {\r\n        // 图片比原始显示小\r\n        if (rect.width < dimen.width) {\r\n          let longSide = rect.width / maskSize.width > rect.height / maskSize.height ? 'width' : 'height';\r\n          // 令长边不小于屏幕的 freeScaleMinRatioForLongSide 倍，但以初始显示效果为准\r\n          if (rect[longSide] / maskSize[longSide] < freeScaleMinRatioForLongSide) {\r\n            if (maskSize[longSide] * freeScaleMinRatioForLongSide > dimen[longSide]) {\r\n              newScaleRatio = 1;\r\n            } else {\r\n              newScaleRatio = maskSize[longSide] * freeScaleMinRatioForLongSide / dimen[longSide];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return newScaleRatio ? newScaleRatio : this.state.scaleRatio;\r\n    }\r\n  }\r\n\r\n  tryShiftImg = (shiftOrientation) => {\r\n    let allNum = this.imagesSizes.length;\r\n    if (allNum === 1) {\r\n      return;\r\n    }\r\n    let state = this.state;\r\n    if (state.currentIndex === 0 && shiftOrientation === orientation_left) {\r\n      return;\r\n    }\r\n    if (state.currentIndex === allNum - 1 && shiftOrientation === orientation_right) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      currentIndex: this.state.currentIndex + shiftOrientation,\r\n      translateX: 0,\r\n      translateY: 0,\r\n      scaleRatio: 1,\r\n      enableTransformAnimation: true\r\n    }, () => {\r\n      this.getRect2TranslateFix();\r\n      this.imgBounding.loadImageBound(this.state.currentIndex);\r\n    });\r\n    return true;\r\n  }\r\n\r\n  distance = (x1, y1, x2, y2) => {\r\n    let a = x1 - x2;\r\n    let b = y1 - y2;\r\n    return Math.sqrt(a * a + b * b);\r\n  }\r\n\r\n  freeScale = (e) => {\r\n    let oldRatio = this.state.scaleRatio;\r\n    let { left, top } = this.imgBounding.rect;\r\n    let { clientX: oneClientX, clientY: oneClientY } = e.touches['0'];\r\n    let { clientX: twoClientX, clientY: twoClientY } = e.touches['1'];\r\n    let newRatio = this.distance(oneClientX, oneClientY, twoClientX, twoClientY) /\r\n      this.distance(...this.preTouchesClientx1y1x2y2) * oldRatio || 1;\r\n    let newOrigin = this.relativeCoordinate((oneClientX + twoClientX) / 2, (oneClientY + twoClientY) / 2, left, top);\r\n    let posX = left + this.rectLeft2TransXFix;\r\n    let posY = top + this.rectTop2TransYFix;\r\n    this.setState({\r\n      scaleRatio: newRatio,\r\n      translateX: posX - (newRatio - oldRatio) * (newOrigin.x),\r\n      translateY: posY - (newRatio - oldRatio) * (newOrigin.y),\r\n      transition: '',\r\n      enableTransformAnimation: false,\r\n      lastAction: Actions.Free\r\n    });\r\n    this.preTouchesClientx1y1x2y2 = [oneClientX, oneClientY, twoClientX, twoClientY];\r\n    this.recordTimer('justFreeScaled', 100);\r\n  }\r\n\r\n  doubleClickScale = (target, clientX, clientY) => {\r\n    // todo 检测图片长宽比、原始尺寸等问题，适当跳过某些缩放模式\r\n    scaleModes.currentScaleMode = (scaleModes.currentScaleMode + 1) % 3;\r\n    console.log(`ratio ${scaleModes.currentScaleMode}`)\r\n    const getScaleRatio = (scaleMode) => {\r\n      let dimen = this.imagesSizes[this.state.currentIndex];\r\n      switch (scaleMode) {\r\n        case scaleModes.OriginalSize:\r\n          return dimen.originWidth / this.maskSize.width;\r\n        case scaleModes.ShortSideFit:\r\n          return dimen.width > dimen.height ? this.maskSize.height / dimen.height : this.maskSize.width / dimen.width;\r\n        default:\r\n          return 1;\r\n      }\r\n    };\r\n\r\n    let newRatio = getScaleRatio(scaleModes.currentScaleMode);\r\n    let rect = this.imgBounding.rect;\r\n    let newOrigin = {\r\n      x: this.relativeCoordinate(clientX, clientY, rect.left, rect.top).x,\r\n      y: this.imagesSizes[this.state.currentIndex].height / 2,\r\n    };\r\n    let posX = rect.left + this.rectLeft2TransXFix;\r\n    let posY = rect.top + this.rectTop2TransYFix;\r\n    let transX = posX - (newRatio - this.state.scaleRatio) * newOrigin.x;\r\n    let transY = posY - (newRatio - this.state.scaleRatio) * newOrigin.y;\r\n    if (scaleModes.currentScaleMode === scaleModes.LongSideFit) {\r\n      transX = transY = 0;\r\n    }\r\n    this.setState({\r\n      translateX: transX,\r\n      translateY: transY,\r\n      scaleRatio: newRatio,\r\n      transition: '',\r\n      enableTransformAnimation: true,\r\n      // 缩放部分编号是统一的\r\n      lastAction: scaleModes.currentScaleMode\r\n    }, () => setTimeout(() => {\r\n      // todo 使用 transition end 事件回调来做\r\n      this.inertiaDamp.scaleDamp();\r\n    }, 400));\r\n  }\r\n\r\n  transStyle = (idx) => {\r\n    let state = this.state;\r\n    let style = Object.assign({},\r\n      state.currentIndex === idx ?\r\n        {\r\n          transform: `matrix(${state.scaleRatio}, 0, 0, ${state.scaleRatio}, ` +\r\n            `${state.translateX - this.maskSize.width * idx}, ${state.translateY}) translateZ(0)`,\r\n          transition: state.transition,\r\n          willChange: `transform`\r\n        } :\r\n        {\r\n          transform: `matrix(1, 0, 0, 1, ${-this.maskSize.width * (state.currentIndex)}, 0)`,\r\n        },\r\n      state.enableTransformAnimation ? { transition: 'transform 400ms' } : null\r\n    );\r\n    return style;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // todo 添加进出场动画？\r\n      <div className=\"mask\">\r\n        <Topbar close={this.props.close} download={this.download} isShow={this.state.showTopBar}\r\n          // todo 改进获取图片总数的方法\r\n          indexInfo={`${this.state.currentIndex + 1} / ${this.props.images.length}`}></Topbar>\r\n        <div className=\"images\"\r\n          onTouchEnd={this.stopTouch}\r\n          onTouchMove={this.touchMove}\r\n          onTouchStart={this.startTouch}\r\n          onTouchCancel={this.cancelTouch}>\r\n          {this.props.images.map((src, idx) =>\r\n            <div key={idx}>\r\n              <img draggable src={src} key={idx} alt={`${idx + 1}`}\r\n                style={this.transStyle(idx)}\r\n                onLoad={(e) => this.onImagesLoad(e, idx)}\r\n                onContextMenu={(e) => { e.preventDefault() }} /></div>)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleTopBar = () => {\r\n    if (this.touching) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      showTopBar: !this.state.showTopBar\r\n    });\r\n  }\r\n\r\n  clearTimeout = (timerKey) => {\r\n    if (!this.timers[timerKey]) {\r\n      return;\r\n    }\r\n    clearTimeout(this.timers[timerKey]);\r\n    this.timers[timerKey] = null;\r\n  }\r\n\r\n  recordTimer = (timerKey, timeout, callback) => {\r\n    this.clearTimeout(timerKey);\r\n    this.timers[timerKey] = setTimeout(() => {\r\n      callback ? callback.apply() : void (0);\r\n      this.clearTimeout(timerKey);\r\n    }, timeout);\r\n  }\r\n\r\n  recordPreTouchPosition = (x, y) => {\r\n    this.preTouchPosition = { x: x, y: y };\r\n  }\r\n\r\n  // 计算图片实时高度转 translateY 所需补充值; translateX 同理\r\n  // 受到缓动动画影响，translateY 不等于图片实时值（translateY = 0 位于中部）\r\n  //   |------------------------|\r\n  //   |                        | \\__This is -rectTop2TransYFix （notice the MINUS）\r\n  //   |                        |/\r\n  //   |   ``````````````````   |<--This is where translateY == 0\r\n  //   |   ` image top half `   | \\\r\n  //   |---`-middle-line----`---|  > Whole Image\r\n  //   |   `                `   |/\r\n  //   |   ``````````````````   |\r\n  //   |   |                    |      The whole rectangle is Your Screen, also as the modal Mask\r\n  //   |   |                    |\r\n  //   |------------------------|\r\n  //   |   |\r\n  //   >===< This is -rectLeft2TransXFix\r\n  //\r\n  // 由 rect.top + this.rectTop2TransYFix 获取实时 translateY\r\n  rectTop2TransYFix = 0;\r\n  rectLeft2TransXFix = 0;\r\n  getRect2TranslateFix = () => {\r\n    let { height: maskHeight, width: maskWidth } = this.maskSize;\r\n    let dimen = this.imagesSizes[this.state.currentIndex];\r\n    this.rectTop2TransYFix = - (maskHeight - dimen.height) / 2;\r\n    this.rectLeft2TransXFix = - (maskWidth - dimen.width) / 2;\r\n  }\r\n\r\n  // 由于某个事件取消了触摸\r\n  // 1. 例如触摸过程被一个模态的弹出框打断\r\n  // 2. 触点离开了文档窗口，而进入了浏览器的界面元素、插件或者其他外部内容区域\r\n  // 3. 当用户产生的触点个数超过了设备支持的个数，从而导致 TouchList 中最早的 Touch 对象被取消\r\n  cancelTouch = (e) => {\r\n    // 可以使用微信长按触发\r\n    if (e.touches.length === 0) {\r\n      Object.keys(this.timers).map(key => this.clearTimeout(key));\r\n      this.touching = false;\r\n    }\r\n  }\r\n\r\n  timers = {\r\n    firstClickTimer: null,\r\n    doubleClickTimer: null,\r\n    // 补充：防止 free scale 后短时间内触发瞬移 move（未及时更新 lastTwo）\r\n    justFreeScaled: null\r\n  };\r\n\r\n  touching = false;\r\n  // 记录图片的初始显示大小、图片原始大小\r\n  imagesSizes = [];\r\n  // 双指 / 多指，记录前一次的两触摸点\r\n  preTouchesClientx1y1x2y2 = [];\r\n  // 接触点 - 图片左上角的值\r\n  preTouchPosition = null;\r\n\r\n  maskSize = {\r\n    width: 0,\r\n    height: 0\r\n  }\r\n\r\n  getMaskSize = () => {\r\n    // 从 mask 换为直接获取 body 尺寸，从而可以在 will mount 阶段就可以获取\r\n    let width = document.body.clientWidth;\r\n    let height = document.body.clientHeight;\r\n    return { width: width, height: height };\r\n  };\r\n\r\n  // 获取当前图片的位置\r\n  imgBounding = {\r\n    img: null,\r\n    get rect() {\r\n      return this.img.getBoundingClientRect();\r\n    },\r\n    loadImageBound(index) {\r\n      // console.log(`load image bound %c${index}`, 'color: orange; font-weight: bold');\r\n      this.img = document.querySelectorAll('.images img')[index];\r\n    }\r\n  }\r\n\r\n  // 绝对坐标转相对坐标，因为 transform-origin 只接受原始坐标值\r\n  relativeCoordinate = (x, y, left, top) => {\r\n    let ratio = this.state.scaleRatio;\r\n    let cx = (x - left) / ratio;\r\n    let cy = (y - top) / ratio;\r\n    return { x: cx, y: cy };\r\n  }\r\n\r\n  updateOnResize = (() => {\r\n    let tick = null;\r\n    const update = () => {\r\n      // 注意依赖关系：计算 matrix 时用到了 maskSize，所以必须最先更新\r\n      this.maskSize = this.getMaskSize();\r\n      this.setState({\r\n        translateX: 0,\r\n        translateY: 0,\r\n        scaleRatio: 1,\r\n        enableTransformAnimation: false\r\n      }, callback.bind(this));\r\n      // I use the function keyword declaration to display the executing order better \r\n      // because jslint will warn the arrow function being used before defined.\r\n      function callback() {\r\n        let imgs = document.querySelectorAll('.images img');\r\n        imgs.forEach((img, idx) => {\r\n          let size = this.imagesSizes[idx];\r\n          size.width = img.width;\r\n          size.height = img.height;\r\n        });\r\n        this.getRect2TranslateFix();\r\n      };\r\n    };\r\n    return () => {\r\n      // this.recordTimer 不适用，这里需要 debounce 函数\r\n      clearTimeout(tick);\r\n      tick = setTimeout(update, 100);\r\n    };\r\n  })();\r\n\r\n  onImagesLoad = ({ target: img }, idx) => {\r\n    this.imagesSizes[idx] = {\r\n      width: img.width,\r\n      height: img.height,\r\n      originWidth: img.naturalWidth,\r\n      originHeight: img.naturalHeight\r\n    };\r\n    if (idx === this.state.currentIndex) {\r\n      this.getRect2TranslateFix();\r\n    }\r\n  }\r\n\r\n  disableBodyMove = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    window.addEventListener('resize', this.updateOnResize);\r\n    let passiveSupport = false;\r\n    try {\r\n      let option = Object.defineProperty({}, 'passive', {\r\n        get: () => {\r\n          passiveSupport = true;\r\n          return false;\r\n        }\r\n      });\r\n      window.addEventListener('passivetest', null, option);\r\n    } catch (err) { }\r\n    document.body.addEventListener('touchmove', this.disableBodyMove, passiveSupport ? { passive: false } : false);\r\n    this.maskSize = this.getMaskSize();\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.imgBounding.loadImageBound(this.state.currentIndex);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.props.onUnmount();\r\n    window.removeEventListener('resize', this.updateOnResize);\r\n    document.body.removeEventListener('touchmove', this.disableBodyMove);\r\n  }\r\n\r\n  download = async (e, filename) => {\r\n    // todo 手机上无法通用地实现，目前仅发现 chrome 支持通过 blob 保存\r\n    alert('call native method!')\r\n  }\r\n}\r\n\r\nfunction Topbar(props) {\r\n  return (\r\n    <div className=\"top\" style={{ transform: props.isShow ? null : `translateY(-120%)` }}>\r\n      <div className=\"back\" onClick={props.close}></div>\r\n      <div className=\"index\">{props.indexInfo}</div>\r\n      <div className=\"download\" onClick={props.download}></div>\r\n      <div className=\"shadow\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* future job\r\nfunction DescriptionPanel(props) {\r\n  return (\r\n    <div className=\"bottom\">\r\n      <div className=\"title\">{props.description.title}</div>\r\n      <div className=\"content\">{props.description.content}</div>\r\n    </div>\r\n  );\r\n}*/\r\n\r\n/*\r\n * props: 传入图片的字符串（单张）或数组（多张）\r\n * props: 传入对象   { images: 数组, onClose: 关闭时的回调函数 }\r\n */\r\n// todo 传入：是否允许下载、current index、是否循环展示\r\nfunction ShowImageView(props = {}) {\r\n  let container = document.querySelector('.__image_view__');\r\n  if (container) {\r\n    document.body.appendChild(container);\r\n  } else {\r\n    container = document.createElement('div');\r\n    container.className = \"__image_view__\";\r\n    document.body.appendChild(container);\r\n  }\r\n\r\n  if (typeof props === 'string') {\r\n    props = {\r\n      images: [props]\r\n    };\r\n  } else if (Array.isArray(props)) {\r\n    props = {\r\n      images: props\r\n    };\r\n  }\r\n  // { images: Array(string), currentIndex: number }\r\n  props = Object.assign({ currentIndex: 0 }, props);\r\n\r\n  if (typeof props.images === 'undefined') {\r\n    throw new Error('Didn\\'t pass the necessary parameters!');\r\n  }\r\n\r\n  const component = React.createElement(ImageView, Object.assign(props, {\r\n    close: () => {\r\n      ReactDOM.render(null, container);\r\n    },\r\n    onUnmount: () => {\r\n      const container = document.querySelector('.__image_view__');\r\n      ReactDOM.unmountComponentAtNode(container);\r\n      if (props.onClose instanceof Function) {\r\n        props.onClose();\r\n      }\r\n    }\r\n  }));\r\n  ReactDOM.render(component, container);\r\n}\r\n\r\nexport default ShowImageView;","import React, { Component } from 'react';\r\nimport ShowImageView from './ImageView';\r\nimport logo from './logo.svg';\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    setTimeout(this.showImageView, 300);\r\n  }\r\n  showImageView = () => {\r\n    ShowImageView({images: ['https://is1-ssl.mzstatic.com/image/thumb/Purple118/v4/bc/ba/16/bcba16f8-49ce-c6b9-6226-d7d85a8556ea/source/256x256bb.jpg', 'https://camo.githubusercontent.com/ba1b52bab595d4c1557f03bb4abf47acdf67f035/687474703a2f2f73722e6b737269612e636e2f6c6f676f2532306269676765722e706e67', 'https://cdn.sspai.com/article/86c69914-4545-bc1c-1310-2975d4fe8d6b.jpg?imageMogr2/quality/95/thumbnail/!700x233r/gravity/Center/crop/700x233', 'https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=3591249579,147186327&fm=26&gp=0.jpg'].reverse(), currentIndex: 1});\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          <button onClick={this.showImageView}>show ImageView</button>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}